{"version":3,"sources":["Pages/OrderSuccess/index.js","Common/Header/indes.js","Common/Footer/indes.js","Pages/OrderFailure/index.js","Common/StartRating/index.js","Pages/ProductGrid/ProductItem/index.js","Pages/ProductGrid/index.js","App.js","serviceWorker.js","index.js"],"names":["OrderSuccss","className","src","alt","React","Component","Header","Footer","OrderFailure","StartRating","ratingChanged","newRating","console","log","count","onChange","this","size","color1","color2","ProductItem","title","currentPrice","originalPrice","discount","reviews","imgSrc","ProductGrid","items","index","push","renderProcuct","App","path","component","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"8UACaA,EAAb,iLAEI,OACE,yBAAKC,UAAU,WACb,kDACA,sEACA,yBAAKC,IAAI,6BAA6BC,IAAI,kBAC1C,0DAPR,GAAiCC,IAAMC,WCA1BC,EAAb,iLAEI,OAAO,2CAFX,GAA4BF,IAAMC,WCArBE,EAAb,iLAEI,OAAO,2CAFX,GAA4BH,IAAMC,WCArBG,EAAb,iLAEI,OACE,yBAAKP,UAAU,WACb,wCACA,4EACA,yBAAKC,IAAI,2BAA2BC,IAAI,gBACxC,8CAPR,GAAkCC,IAAMC,W,yBCCnBI,E,2MAYnBC,cAAgB,SAAAC,GACdC,QAAQC,IAAIF,I,wEAXZ,OACE,kBAAC,IAAD,CACEG,MAAO,EACPC,SAAUC,KAAKN,cACfO,KAAM,GACNC,OAAQ,UACRC,OAAQ,gB,GARyBf,IAAMC,WCC1Be,E,2MACnBC,MAAQ,0D,EACRC,aAAe,Q,EACfC,cAAgB,Q,EAChBC,SAAW,U,EACXC,QAAU,e,EACVC,OAAS,4B,wEAEP,OACE,yBAAKzB,UAAU,aACb,yBAAKA,UAAU,gBAAgBC,IAAKc,KAAKU,OAAQvB,IAAKa,KAAKK,QAC3D,0BAAMpB,UAAU,SAAhB,sBACA,0BAAMA,UAAU,SAASe,KAAKK,OAC9B,6BACE,0BAAMpB,UAAU,iBAAiBe,KAAKM,cACtC,0BAAMrB,UAAU,kBAAkBe,KAAKO,eACvC,0BAAMtB,UAAU,YAAYe,KAAKQ,WAEnC,6BACE,kBAAC,EAAD,MACA,kCAAQR,KAAKS,QAAb,W,GApB+BrB,IAAMC,WCA1BsB,G,iNACnBV,KAAO,G,+EAGL,IADA,IAAIW,EAAQ,GACHC,EAAQ,EAAGA,EAAQ,GAAIA,IAC9BD,EAAME,KAAK,kBAAC,EAAD,OAEb,OAAOF,I,+BAGP,OAAO,yBAAK3B,UAAU,gBAAgBe,KAAKe,qB,GAVN3B,IAAMC,YCM1B2B,E,iLAEjB,OACE,6BACE,kBAAC,EAAD,MACA,kBAAC,IAAD,KACE,6BACE,kBAAC,IAAD,CAAOC,KAAK,QAAQC,UAAWP,IAC/B,kBAAC,IAAD,CAAOM,KAAK,iBAAiBC,UAAWlC,IACxC,kBAAC,IAAD,CAAOiC,KAAK,iBAAiBC,UAAW1B,MAG5C,kBAAC,EAAD,W,GAZyBJ,IAAMC,WCGnB8B,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.5054cfc4.chunk.js","sourcesContent":["import React from \"react\";\r\nexport class OrderSuccss extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"success\">\r\n        <span>Congratulations.</span>\r\n        <span> Your Order was placed successfully.</span>\r\n        <img src=\"./images/happy builder.png\" alt=\"happy builder\" />\r\n        <button>Continue Shopping</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nexport class Header extends React.Component {\r\n  render() {\r\n    return <div>Header</div>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nexport class Footer extends React.Component {\r\n  render() {\r\n    return <div>Footer</div>;\r\n  }\r\n}\r\n","import React from \"react\";\r\nexport class OrderFailure extends React.Component {\r\n  render() {\r\n    return (\r\n      <div className=\"success\">\r\n        <span>Sorry.</span>\r\n        <span> Your Order was not placed due to (error).</span>\r\n        <img src=\"./images/sad builder.png\" alt=\"sad builder\" />\r\n        <button>Retry</button>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import StarsRating from \"stars-rating\";\r\nimport React from \"react\";\r\nexport default class StartRating extends React.Component {\r\n  render() {\r\n    return (\r\n      <StarsRating\r\n        count={5}\r\n        onChange={this.ratingChanged}\r\n        size={24}\r\n        color1={\"#d4d4d4\"}\r\n        color2={\"#ffd700\"}\r\n      />\r\n    );\r\n  }\r\n  ratingChanged = newRating => {\r\n    console.log(newRating);\r\n  };\r\n}\r\n","import React from \"react\";\r\nimport \"./style.scss\";\r\nimport StarRating from \"./../../../Common/StartRating\";\r\nexport default class ProductItem extends React.Component {\r\n  title = \"MuscleBlaze Whey Gold Protein ,4 lb Rich Milk Chocolate\";\r\n  currentPrice = \"3,999\";\r\n  originalPrice = \"5,740\";\r\n  discount = \"30% off\";\r\n  reviews = \"1182 reviews\";\r\n  imgSrc = \"./images/product-demo.png\";\r\n  render() {\r\n    return (\r\n      <div className=\"grid-item\">\r\n        <img className=\"product-image\" src={this.imgSrc} alt={this.title} />\r\n        <span className=\"offer\">Limited time offer</span>\r\n        <span className=\"title\">{this.title}</span>\r\n        <div>\r\n          <span className=\"current-price\">{this.currentPrice}</span>\r\n          <span className=\"original-price\">{this.originalPrice}</span>\r\n          <span className=\"discount\">{this.discount}</span>\r\n        </div>\r\n        <div>\r\n          <StarRating />\r\n          <span>({this.reviews})</span>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ProductItem from \"./ProductItem\";\r\nimport \"./style.scss\";\r\nexport default class ProductGrid extends React.Component {\r\n  size = 10;\r\n  renderProcuct() {\r\n    let items = [];\r\n    for (let index = 0; index < 10; index++) {\r\n      items.push(<ProductItem />);\r\n    }\r\n    return items;\r\n  }\r\n  render() {\r\n    return <div className=\"product-grid\">{this.renderProcuct()}</div>;\r\n  }\r\n}\r\n","import React from \"react\";\nimport \"./App.scss\";\nimport { Route, BrowserRouter as Router } from \"react-router-dom\";\nimport { OrderSuccss } from \"./Pages/OrderSuccess\";\nimport { Header } from \"./Common/Header/indes\";\nimport { Footer } from \"./Common/Footer/indes\";\nimport { OrderFailure } from \"./Pages/OrderFailure\";\nimport ProductGrid from \"./Pages/ProductGrid\";\n\nexport default class App extends React.Component {\n  render() {\n    return (\n      <div>\n        <Header />\n        <Router>\n          <div>\n            <Route path=\"/grid\" component={ProductGrid} />\n            <Route path=\"/order-success\" component={OrderSuccss} />\n            <Route path=\"/order-failure\" component={OrderFailure} />\n          </div>\n        </Router>\n        <Footer />\n      </div>\n    );\n  }\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.scss\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}